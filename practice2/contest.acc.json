{
  "contest": {
    "id": "practice2",
    "title": "AtCoder Library Practice Contest",
    "url": "https://atcoder.jp/contests/practice2"
  },
  "tasks": [
    {
      "id": "practice2_a",
      "label": "A",
      "title": "Disjoint Set Union",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_a",
      "directory": {
        "path": "a",
        "testdir": "tests_practice2_a",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_b",
      "label": "B",
      "title": "Fenwick Tree",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_b",
      "directory": {
        "path": "b",
        "testdir": "tests_practice2_b",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_c",
      "label": "C",
      "title": "Floor Sum",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_c",
      "directory": {
        "path": "c",
        "testdir": "tests_practice2_c",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_d",
      "label": "D",
      "title": "Maxflow",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_d",
      "directory": {
        "path": "d",
        "testdir": "tests_practice2_d",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_e",
      "label": "E",
      "title": "MinCostFlow",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_e",
      "directory": {
        "path": "e",
        "testdir": "tests_practice2_e",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_f",
      "label": "F",
      "title": "Convolution",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_f",
      "directory": {
        "path": "f",
        "testdir": "tests_practice2_f",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_g",
      "label": "G",
      "title": "SCC",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_g",
      "directory": {
        "path": "g",
        "testdir": "tests_practice2_g",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_h",
      "label": "H",
      "title": "Two SAT",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_h",
      "directory": {
        "path": "h",
        "testdir": "tests_practice2_h",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_i",
      "label": "I",
      "title": "Number of Substrings",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_i",
      "directory": {
        "path": "i",
        "testdir": "tests_practice2_i",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_j",
      "label": "J",
      "title": "Segment Tree",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_j",
      "directory": {
        "path": "j",
        "testdir": "tests_practice2_j",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_k",
      "label": "K",
      "title": "Range Affine Range Sum",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_k",
      "directory": {
        "path": "k",
        "testdir": "tests_practice2_k",
        "submit": "main.cpp"
      }
    },
    {
      "id": "practice2_l",
      "label": "L",
      "title": "Lazy Segment Tree",
      "url": "https://atcoder.jp/contests/practice2/tasks/practice2_l",
      "directory": {
        "path": "l",
        "testdir": "tests_practice2_l",
        "submit": "main.cpp"
      }
    }
  ]
}